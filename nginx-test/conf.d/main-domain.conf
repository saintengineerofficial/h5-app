# HTTP 重定向到 HTTPS
server {
    listen 80;
    server_name test-activity.boli.live;
    return 301 https://$host$request_uri;
}

# HTTPS 服务器
server {
    listen 443 ssl http2;
    server_name test-activity.boli.live;

    # SSL 配置
    ssl_certificate /etc/nginx/certs/boli.live_bundle.crt;
    ssl_certificate_key /etc/nginx/certs/boli.live.key;
    
    # SSL 安全配置
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # 安全头
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # 通用代理设置 (避免重复)
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Port $server_port;
    proxy_cache_bypass $http_upgrade;

    # 通用缓冲区设置
    proxy_buffering on;
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;

    # 通用超时设置
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;

    # Charm Anchor 应用的静态资源
    location ~* ^/charm-anchor/_next/static/(.*) {
        proxy_pass http://charm-anchor:3300/_next/static/$1;
        expires 365d;
        add_header Cache-Control "public, immutable, no-transform";
        add_header Vary "Accept-Encoding";
    }

    # Red Room 应用的静态资源
    location ~* ^/red-room/_next/static/(.*) {
        proxy_pass http://red-room:3301/_next/static/$1;
        expires 365d;
        add_header Cache-Control "public, immutable, no-transform";
        add_header Vary "Accept-Encoding";
    }

    # Charm Anchor 应用
    location /charm-anchor {
        proxy_pass http://charm-anchor:3300;
        proxy_no_cache $http_pragma $http_authorization;
        
        # 如果需要去除路径前缀，使用以下配置
        # rewrite ^/charm-anchor(.*)$ $1 break;
    }

    # Red Room 应用
    location /red-room {
        proxy_pass http://red-room:3301;
        proxy_no_cache $http_pragma $http_authorization;
        
        # 如果需要去除路径前缀，使用以下配置
        # rewrite ^/red-room(.*)$ $1 break;
    }

    # 根路径处理 (可选 - 可以显示应用选择页面或返回404)
    location = / {
        return 404;
    }

    # 健康检查端点 (可选)
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # 错误页面 (可选)
    error_page 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}