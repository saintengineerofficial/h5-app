services:
  # Nginx 反向代理服务
  nginx:
    image: nginx:latest
    container_name: nextjs_proxy_nginx
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"
      - "${NGINX_HOST_HTTPS_PORT}:443" # 保持 HTTPS 端口映射
    volumes:
      - ./nginx-local/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx-local/conf.d:/etc/nginx/conf.d:ro
      # 证书路径保持不变，由环境变量决定其值
      # - ${NGINX_CERT_PATH}/boli.live_bundle.crt:/etc/nginx/ssl/boli.live_bundle.crt:ro
      # - ${NGINX_CERT_PATH}/boli.live.key:/etc/nginx/ssl/boli.live.key:ro
    depends_on:
      - charm-anchor
    restart: unless-stopped
    networks:
      - boli-network

  # Charm Anchor 应用服务
  charm-anchor:
    build:
      context: .
      dockerfile: apps/charm-anchor/Dockerfile
    container_name: nextjs_charm_anchor
    environment:
      - NODE_ENV=production  # 保持 production 以测试生产环境构建
      - PORT=3300
    env_file:
      - ./apps/charm-anchor/.env.development  # 使用开发环境配置
    restart: unless-stopped
    networks:
      - boli-network

  # 应用模板 (复制此模板来添加新应用)
  # app-template:
  #   build:
  #     context: .
  #     dockerfile: apps/app-name/Dockerfile
  #   container_name: nextjs_app_name
  #   environment:
  #     - NODE_ENV=production
  #     - PORT=3301  # 确保每个应用使用不同的端口
  #     - NEXT_PUBLIC_BASE_PATH=/app-name
  #   restart: unless-stopped

networks:
  boli-network:
    driver: bridge